You are given two strings s1 and s2, of equal lengths. The task is to check if s2 is a rotated version of the string s1.

Note: A string is a rotation of another if it can be formed by moving characters from the start to the end (or vice versa) without rearranging them.

Examples :

Input: s1 = "abcd", s2 = "cdab"
Output: true
Explanation: After 2 right rotations, s1 will become equal to s2.
Input: s1 = "aab", s2 = "aba"
Output: true
Explanation: After 1 left rotation, s1 will become equal to s2.
Input: s1 = "abcd", s2 = "acbd"
Output: false
Explanation: Strings are not rotations of each other.
Constraints:
1 ≤ s1.size(), s2.size() ≤ 105
s1, s2 consists of lowercase English alphabets.

SOLUTION:


class Solution {
    // Function to check if two strings are rotations of each other or not.
    static int[] computeLPSArray(String pattern){
        int n=pattern.length();
        int[] lps=new int[n];
        int len=0;
        lps[0]=0;
        int i=1;
        while(i<n){
            if(pattern.charAt(i)==pattern.charAt(len)){
                len++;
                lps[i]=len;
                i++;
            }
            else{
                if(len!=0){
                    len=lps[len-1];
                }
                else{
                    lps[i]=0;
                    i++;
                }
            }
        }
        return lps;
    }
    public static boolean areRotations(String s1, String s2) {
        
        // Your code here
        String text=s1+s1;
        String pattern=s2;
        int n=text.length();
        int m=pattern.length();
        int[] lps=computeLPSArray(pattern);
        int i=0;
        int j=0;
        while(i<n){
            if(pattern.charAt(j)==text.charAt(i)){
                j++;
                i++;
            }
            if(j==m) return true;
            else if(i<n&&pattern.charAt(j)!=text.charAt(i)){
                if(j!=0){
                    j=lps[j-1];
                }
                else{
                    i=i+1;
                }
            }
            
        }
        return false;
    }
}
